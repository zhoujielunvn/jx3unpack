---------------------------------------------------------------------->
-- 脚本名称:	scripts/Map/家园系统/miniGame/majhong/xueliuchenghe/xueliuchengheInclude.lua
-- 更新时间:	2020/2/25 18:04:46
-- 更新用户:	KING-20200219SB
-- 脚本说明:	
----------------------------------------------------------------------<
Include("scripts/Include/CustomFunction.lua")

tCardsAll = {
	0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
	0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
	0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
	0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
	0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29,
	0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29,
	0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29,
	0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29
}

tCardsAll1 = {
	0x01, 0x01, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x09, 0x09,
	0x11, 0x11, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x19, 0x19,
	0x21, 0x21, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x29, 0x29,
	0x09, 0x01,
	0x02, 0x02, 0x02,
	0x03, 0x03, 0x03,
	0x04, 0x04, 0x04,
	0x05, 0x05, 0x05,
	0x06, 0x06, 0x06,
	0x07, 0x07, 0x07,
	0x08, 0x08, 0x08,
	0x19, 0x11,
	0x12, 0x12, 0x12,
	0x13, 0x13, 0x13,
	0x14, 0x14, 0x14,
	0x15, 0x15, 0x15,
	0x16, 0x16, 0x16,
	0x17, 0x17, 0x17,
	0x18, 0x18, 0x18,
	0x21, 0x29,
	0x22, 0x22, 0x22,
	0x23, 0x23, 0x23,
	0x24, 0x24, 0x24,
	0x25, 0x25, 0x25,
	0x26, 0x26, 0x26,
	0x27, 0x27, 0x27,
	0x28, 0x28, 0x28,
}

--[[
tCardsAll1 = {
	0x21, 0x22, 0x29, 0x17, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
	0x02, 0x03, 0x04, 0x04, 0x05, 0x06, 0x07, 0x08, 0x11, 0x11, 0x13, 0x15, 0x14, --胡: 0x01 0x04 0x07
	0x02, 0x03, 0x05, 0x06, 0x21, 0x21, 0x21, 0x22, 0x22, 0x22, 0x23, 0x23, 0x16, --胡: 0x01 0x04 0x07
	0x01, 0x01, 0x04, 0x04, 0x07, 0x07, 0x08, 0x08, 0x01, 0x01, 0x09, 0x03, 0x03,
	0x17, 0x26, 0x27, 0x28, 0x29, 0x08, 0x26, 0x27, 0x28, 0x29, 0x23, 0x23, 0x09,
	0x24, 0x25, 0x26, 0x27, 0x28, 0x29,
	0x24, 0x24, 0x24, 0x27, 0x28, 
	0x12, 0x13, 0x14, 0x15, 0x16, 0x19, 0x18, 0x06, 
	0x12, 0x14, 0x15, 0x16, 0x18, 0x19, 0x09, 0x09, 0x06, 
	0x17, 0x18, 0x19, 0x07, 0x02, 0x11, 0x12,
	0x25, 0x25, 0x25, 0x05, 
	
	0x26, 0x02, 0x13, 0x05,
}
tCardsAll1 = {
	0x02, 0x03, 0x04, 0x05, 0x06, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x18, 
	0x02, 0x03, 0x04, 0x05, 0x06, 0x09, 0x09, 0x09, 0x01, 0x02, 0x03, 0x08, 0x08,  --胡: 0x01 0x04 0x07
	0x02, 0x03, 0x04, 0x05, 0x06, 0x21, 0x21, 0x21, 0x22, 0x22, 0x22, 0x23, 0x23,  --胡: 0x01 0x04 0x07
	0x01, 0x01, 0x01, 0x04, 0x07, 0x07, 0x07, 0x07, 0x11, 0x12, 0x13, 0x14, 0x15,
	0x26, 0x27, 0x28, 0x29, 0x08, 0x26, 0x27, 0x28, 0x29, 0x23, 0x23, 0x16, 0x09,
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x19, 0x19,
	0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
	0x17, 0x18, 0x19,
	0x11, 0x25, 0x25, 0x25, 0x05, 0x06, 0x08,
	
	0x26, 0x27, 0x28, 0x29,
	0x21, 0x22, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29,
	0x24, 0x24, 0x24,
	
}
--]]
--[[
tCardsAll1 = {
	0x11, 0x11, 0x11, 0x09, 0x09, 0x09, 0x09, 0x15, 0x15, 0x15, 0x16, 0x16, 0x16, 
	0x15, 0x16, 0x04, 0x06, 0x06, 0x21, 0x21, 0x21, 0x22, 0x22, 0x22, 0x23, 0x23,
	0x02, 0x07, 0x04, 0x05, 0x06, 0x24, 0x24, 0x24, 0x25, 0x25, 0x25, 0x23, 0x23,
	0x01, 0x01, 0x01, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
	0x11, 0x26, 0x27, 0x28, 0x29, 0x17, 0x01, 0x07, 0x08, 0x04, 0x26, 0x27, 0x28, 0x29, 0x17, 0x08, 0x08, 
	0x07, 0x12, 0x13, 0x14, 0x18, 0x19,  0x18, 0x19,
	0x12, 0x13, 0x14, 0x18, 0x19,
	0x17, 0x18, 0x05, 0x05, 0x17, 0x19,
	0x02, 0x02, 0x12, 0x13, 0x14,
	
	0x26, 0x27, 0x28, 0x29,
	0x21, 0x22, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29,
	0x12, 0x13, 0x14
}

tCardsAll1 = {
0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x05, 0x03, 0x03, 0x03, 0x07, 0x07,
0x11, 0x11, 0x11, 0x11, 0x12, 0x12, 0x12, 0x12, 0x13, 0x13, 0x13, 0x13, 0x14,
0x07, 0x07, 0x14, 0x15, 0x08, 0x08, 0x08, 0x08, 0x09, 0x09, 0x09, 0x09, 0x14,
0x04, 0x04, 0x04, 0x01, 0x05, 0x05, 0x05, 0x02, 0x06, 0x06, 0x06, 0x03, 0x14,
0x15, 0x15, 0x06, 0x15,
0x16, 0x16, 0x16, 0x16,
0x17, 0x17, 0x17, 0x17,
0x18, 0x18, 0x18, 0x18,
0x19, 0x19, 0x19, 0x19,
0x21, 0x21, 0x21, 0x21,
0x22, 0x22, 0x22, 0x22,
0x23, 0x23, 0x23, 0x23,
0x24, 0x24, 0x24, 0x24,
0x25, 0x25, 0x25, 0x25,
0x26, 0x26, 0x26, 0x26,
0x27, 0x27, 0x27, 0x27,
0x28, 0x28, 0x28, 0x28,
0x29, 0x29, 0x29, 0x29,
}
--]]
--[[
tCardsAll1 = {
0x01, 0x01, 0x01, 0x01,
0x02, 0x02, 0x02, 0x02,
0x03, 0x03, 0x03, 0x03,
0x04, 0x04, 0x04, 0x04,
0x05, 0x05, 0x05, 0x05,
0x06, 0x06, 0x06, 0x06,
0x07, 0x07, 0x07, 0x07,
0x08, 0x08, 0x08, 0x08,
0x09, 0x09, 0x09, 0x09,
0x11, 0x11, 0x11, 0x11,
0x12, 0x12, 0x12, 0x12,
0x13, 0x13, 0x13, 0x13,
0x14, 0x14, 0x14, 0x14,
0x15, 0x15, 0x15, 0x15,
0x16, 0x16, 0x16, 0x16,
0x17, 0x17, 0x17, 0x17,
0x18, 0x18, 0x18, 0x18,
0x19, 0x19, 0x19, 0x19,
0x21, 0x21, 0x21, 0x21,
0x22, 0x22, 0x22, 0x22,
0x23, 0x23, 0x23, 0x23,
0x24, 0x24, 0x24, 0x24,
0x25, 0x25, 0x25, 0x25,
0x26, 0x26, 0x26, 0x26,
0x27, 0x27, 0x27, 0x27,
0x28, 0x28, 0x28, 0x28,
0x29, 0x29, 0x29, 0x29,
}
--]]

--检测data的第flagN位是否为1, flagN取值[0,len(data)-1], CheckFlagN(5, 1)返回false(5二进制101)
function CheckFlagN(data, flagN)
	return CustomFunction.GetValueByBit(data, flagN) == 1
end
--[[
function checkFlag(data, flag)
	if bit.ban(data, flag) == 0 then
		return false
	end
	return true
end
--]]

--设置data的第flagN位为1, flagN取值[0,len(data)-1], SetFlagN(5, 1)返回7(5二进制101, 7二进制111)
function SetFlagN(data, flagN)
	return CustomFunction.SetValueByBit(data, flagN, 1)
end
--[[
function setFlag(data, flag)
	return bit.bor(data, flag)
end
--]]

--设置data的第flagN位为0, flagN取值[0,len(data)-1], ClearFlagN(5, 0)返回4(5二进制101, 4二进制100)
--[[
function ClearFlagN(data, flagN)
	return CustomFunction.SetValueByBit(data, flagN, 0)
end
function clearFlag(data, flag)
	return bit.ban(data, bit.bnot(flag))
end
--]]

--取出data的第flagN处count位的数据(从右往左数), flagN取值[0, len(data)-1], count取值[1, len(data)-flagN], GetDataWithFlagN(68, 1, 3)返回2(68二进制1000100, 2二进制10)
--[[
function GetDataWithFlagN(data, flagN, count)
	local tempData = 0
	for i=0,count-1 do
		tempData = tempData + CustomFunction.GetValueByBit(data, flagN+i) * (2 ^ i)
	end
	return tempData;
end
function getDataWithFlag(data, flag, shiftCount)
	return bit.rshift(bit.ban(data, flag), shiftCount)
end
--]]

--设置data的第shiftCount处的数据为addData(从右向左写入), shiftCount取值[0, len(data)-1], SetDataWithFlagN(68, 5, 3)返回108(68二进制1000100, 108二进制1101100, 5二进制101)
function SetDataWithFlagN(data, addData, shiftCount)
	local tempTable = {}
	local count = 0
	while addData > 0
	do
		tempTable[count] = addData % 2
		addData = math.floor(addData / 2)
		count = count + 1
	end
	for k, v in pairs(tempTable) do
		data = CustomFunction.SetValueByBit(data, k+shiftCount, v)
	end
	return data;
end
--[[
function setDataWithFlag(data, addData, shiftCount)
	return bit.bor(data, bit.lshift(addData, shiftCount))
end
--]]